(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[888],{2003:function(e){"use strict";e.exports=function({mustBeMetaMask:e=!1,silent:t=!1,timeout:r=3e3}={}){!function(){if("boolean"!=typeof e)throw Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");if("boolean"!=typeof t)throw Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");if("number"!=typeof r)throw Error("@metamask/detect-provider: Expected option 'timeout' to be a number.")}();let n=!1;return new Promise(a=>{window.ethereum?handleEthereum():(window.addEventListener("ethereum#initialized",handleEthereum,{once:!0}),setTimeout(()=>{handleEthereum()},r));function handleEthereum(){if(n)return;n=!0,window.removeEventListener("ethereum#initialized",handleEthereum);let{ethereum:r}=window;if(r&&(!e||r.isMetaMask))a(r);else{let n=e&&r?"Non-MetaMask window.ethereum detected.":"Unable to detect window.ethereum.";t||console.error("@metamask/detect-provider:",n),a(null)}}})}},6840:function(e,t,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/_app",function(){return r(4277)}])},4277:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return _app}});var n=r(5893);r(5303);var a=r(7294),o=r(2003),i=r.n(o);let formatBalance=e=>{let t=(parseInt(e)/1e18).toFixed(2);return t},u={accounts:[],balance:"",chainId:""},c=(0,a.createContext)({}),MetaMaskContextProvider=e=>{let{children:t}=e,[r,o]=(0,a.useState)(null),[s,d]=(0,a.useState)(!1),[l,w]=(0,a.useState)(""),[h,m]=(0,a.useState)(u),clearError=()=>w(""),_=(0,a.useCallback)(async e=>{if(window.ethereum)try{let t=e||await window.ethereum.request({method:"eth_accounts"});if(0===t.length){m(u);return}let r=formatBalance(await window.ethereum.request({method:"eth_getBalance",params:[t[0],"latest"]})),n=await window.ethereum.request({method:"eth_chainId"});m({accounts:t,balance:r,chainId:n})}catch(e){console.error("Failed to update wallet:",e),m(u)}else m(u)},[]),f=(0,a.useCallback)(()=>{_()},[_]),p=(0,a.useCallback)(e=>{_(e)},[_]);(0,a.useEffect)(()=>{let getProvider=async()=>{let e=await i()({silent:!0});o(!!e),e?(f(),window.ethereum&&(window.ethereum.on("accountsChanged",p),window.ethereum.on("chainChanged",f))):o(!1)};return getProvider(),()=>{var e;(null===(e=window.ethereum)||void 0===e?void 0:e.removeListener)&&(window.ethereum.removeListener("accountsChanged",p),window.ethereum.removeListener("chainChanged",f))}},[p,f]);let connectMetaMask=async()=>{d(!0);try{if(window.ethereum){let e=await window.ethereum.request({method:"eth_requestAccounts"});clearError(),p(e)}else w("MetaMask is not available")}catch(e){w(e.message)}d(!1)};return(0,n.jsx)(c.Provider,{value:{wallet:h,hasProvider:r,error:!!l,errorMessage:l,isConnecting:s,connectMetaMask,clearError},children:t})};var _app=function(e){let{Component:t,pageProps:r}=e,[o,i]=(0,a.useState)(!0);return(0,a.useEffect)(()=>{let e=window.document.documentElement;o?e.classList.add("dark"):e.classList.remove("dark")},[o]),(0,n.jsx)(MetaMaskContextProvider,{children:(0,n.jsx)(t,{...r,isDarkMode:o,toggleDarkMode:()=>{i(e=>!e)}})})}},5303:function(){}},function(e){var __webpack_exec__=function(t){return e(e.s=t)};e.O(0,[774,179],function(){return __webpack_exec__(6840),__webpack_exec__(8355)}),_N_E=e.O()}]);